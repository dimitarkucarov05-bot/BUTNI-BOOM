import React from 'react'
import { BrowserRouter, Routes, Route, Navigate } from 'react-router-dom'

// üö© –í–ê–ñ–ù–û: —Å–ª–∞–≥–∞–º .tsx —Ä–∞–∑—à–∏—Ä–µ–Ω–∏–µ, –∑–∞ –¥–∞ –Ω—è–º–∞ "Could not resolve" –≤ –±–∏–ª–¥–∞
import Landing  from './pages/Landing.tsx'
import Login    from './pages/Login.tsx'
import Register from './pages/Register.tsx'

// –ê–∫–æ –≤–µ—á–µ –∏–º–∞—à —Ç–µ–∑–∏ —Å—Ç—Ä–∞–Ω–∏—Ü–∏ ‚Äì –æ—Å—Ç–∞–≤–∏ –≥–∏.
// –ê–∫–æ –æ—â–µ –≥–∏ –Ω—è–º–∞—à, –º–æ–∂–µ—à –≤—Ä–µ–º–µ–Ω–Ω–æ –¥–∞ –º–∞—Ö–Ω–µ—à —Ç–µ–∑–∏ 4 —Ä–µ–¥–∞/—Ä–æ—É—Ç–∏.
// import Menu     from './pages/Menu.tsx'
// import Profile  from './pages/Profile.tsx'
// import MapPage  from './pages/Map.tsx'
// import Scan     from './pages/Scan.tsx'

import { supabase } from './supabase'

function RequireAuth({ children }: { children: React.ReactNode }) {
  const [ready, setReady] = React.useState(false)
  const [authed, setAuthed] = React.useState(false)

  React.useEffect(() => {
    supabase.auth.getUser().then((r) => {
      setAuthed(!!r.data.user)
      setReady(true)
    })
  }, [])

  if (!ready) return null
  return authed ? <>{children}</> : <Navigate to="/auth" replace />
}

export default function App() {
  return (
    <BrowserRouter>
      <Routes>
        <Route path="/" element={<Landing />} />
        <Route path="/auth" element={<Login />} />
        <Route path="/register" element={<Register />} />

        {/* –ê–∫–æ –≤–µ—á–µ –∏–º–∞—à —Ç–µ–∑–∏ —Å—Ç—Ä–∞–Ω–∏—Ü–∏ ‚Äì —Ä–∞–∑–∫–æ–º–µ–Ω—Ç–∏—Ä–∞–π –≥–∏
        <Route path="/menu" element={<RequireAuth><Menu /></RequireAuth>} />
        <Route path="/profile" element={<RequireAuth><Profile /></RequireAuth>} />
        <Route path="/map" element={<RequireAuth><MapPage /></RequireAuth>} />
        <Route path="/scan" element={<RequireAuth><Scan /></RequireAuth>} />
        */}

        <Route path="*" element={<Navigate to="/" replace />} />
      </Routes>
    </BrowserRouter>
  )
}
